{"ast":null,"code":"var _jsxFileName = \"/Users/yukinakamura/Desktop/dev/Study/react_tutorial/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"x\" : \"o\");\n  }\n  function handleClick(i) {\n    const squaresCopy = [...squares];\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    squaresCopy[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(squaresCopy);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), [0, 1, 2].fill().map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].fill().map(col => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[row * 3 + col],\n        onSquareClick: () => {\n          handleClick(row * 3 + col);\n        }\n      }, row * 3 + col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    if (move === currentMove) {\n      return `You are at move #${currentMove}`;\n    }\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winner","calculateWinner","status","handleClick","i","squaresCopy","nextSquares","slice","fill","map","row","col","_c2","Game","_s","history","setHistory","Array","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/yukinakamura/Desktop/dev/Study/react_tutorial/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"x\" : \"o\");\n  }\n\n  function handleClick(i) {\n    const squaresCopy = [...squares];\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    squaresCopy[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(squaresCopy);\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].fill().map((row) => (\n        <div className=\"board-row\" key={row}>\n          {[0, 1, 2].fill().map((col) => (\n            <Square\n              key={row * 3 + col}\n              value={squares[row * 3 + col]}\n              onSquareClick={() => {\n                handleClick(row * 3 + col);\n              }}\n            />\n          ))}\n        </div>\n      ))}\n      {/* <div className=\"board-row\">\n        <Square\n          value={squares[0]}\n          onSquareClick={() => {\n            handleClick(0);\n          }}\n        />\n        <Square\n          value={squares[1]}\n          onSquareClick={() => {\n            handleClick(1);\n          }}\n        />\n        <Square\n          value={squares[2]}\n          onSquareClick={() => {\n            handleClick(2);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[3]}\n          onSquareClick={() => {\n            handleClick(3);\n          }}\n        />\n        <Square\n          value={squares[4]}\n          onSquareClick={() => {\n            handleClick(4);\n          }}\n        />\n        <Square\n          value={squares[5]}\n          onSquareClick={() => {\n            handleClick(5);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[6]}\n          onSquareClick={() => {\n            handleClick(6);\n          }}\n        />\n        <Square\n          value={squares[7]}\n          onSquareClick={() => {\n            handleClick(7);\n          }}\n        />\n        <Square\n          value={squares[8]}\n          onSquareClick={() => {\n            handleClick(8);\n          }}\n        />\n      </div> */}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    if (move === currentMove) {\n      return `You are at move #${currentMove}`;\n    }\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}