{"ast":null,"code":"var _jsxFileName = \"/Users/yukinakamura/Desktop/dev/Study/react_tutorial/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinnerSquare,\n  isCurrentSquare\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinnerSquare ? \"winner\" : \"\"} ${isCurrentSquare ? \"current\" : \"\"}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  isDraw,\n  currentMove\n}) {\n  const {\n    winner,\n    line\n  } = calculateWinner(squares);\n  let status;\n  if (isDraw) {\n    status = \"Draw\";\n  } else if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"x\" : \"o\");\n  }\n  function handleClick(i) {\n    if (winner || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  // マス目をレンダーする関数\n  function renderSquare(i) {\n    const isWinnerSquare = winner && line && line.includes(i);\n    const isCurrentSquare = Boolean(squares[i]); // 一つ前のターンのsquares[i]がnullだったらiが最新手 isCurrentSquareはtrue\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onSquareClick: () => handleClick(i),\n      isWinnerSquare: isWinnerSquare,\n      isCurrentSquare: isCurrentSquare\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(3)].map((_, j) => {\n        const index = i * 3 + j;\n        return renderSquare(index);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const isDraw = currentMove === 9 && !calculateWinner(currentSquares).winner;\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n  let moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      const clickedSquare = squares.findIndex((value, index) => value !== history[move - 1][index]);\n      const row = Math.floor(clickedSquare / 3) + 1;\n      const col = clickedSquare % 3 + 1;\n      description = move === currentMove ? `You are at move #${currentMove} (row: ${row}, col: ${col})` : `Go to move #${move} (row: ${row}, col: ${col})`;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: move === currentMove ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  });\n  if (!ascendingOrder) {\n    moves = moves.reverse();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        isDraw: isDraw,\n        currentMove: currentMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleOrder,\n          children: ascendingOrder ? \"Descending Order\" : \"Ascending Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        reversed: !ascendingOrder,\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"0nPoRNwJCm+SRZEmUzUg9M4Q6zQ=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i]\n      };\n    }\n  }\n  return {\n    winner: null,\n    line: null\n  };\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinnerSquare","isCurrentSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","isDraw","currentMove","winner","line","calculateWinner","status","handleClick","i","nextSquares","slice","renderSquare","includes","Boolean","Array","map","_","j","index","_c2","Game","_s","history","setHistory","fill","setCurrentMove","ascendingOrder","setAscendingOrder","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","toggleOrder","moves","move","description","clickedSquare","findIndex","row","Math","floor","col","reverse","reversed","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/yukinakamura/Desktop/dev/Study/react_tutorial/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick, isWinnerSquare, isCurrentSquare }) {\n  return (\n    <button\n      className={`square ${isWinnerSquare ? \"winner\" : \"\"} ${\n        isCurrentSquare ? \"current\" : \"\"\n      }`}\n      onClick={onSquareClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, isDraw, currentMove }) {\n  const { winner, line } = calculateWinner(squares);\n  let status;\n  if (isDraw) {\n    status = \"Draw\";\n  } else if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"x\" : \"o\");\n  }\n\n  function handleClick(i) {\n    if (winner || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  // マス目をレンダーする関数\n  function renderSquare(i) {\n    const isWinnerSquare = winner && line && line.includes(i);\n    const isCurrentSquare = Boolean(squares[i]); // 一つ前のターンのsquares[i]がnullだったらiが最新手 isCurrentSquareはtrue\n    return (\n      <Square\n        key={i}\n        value={squares[i]}\n        onSquareClick={() => handleClick(i)}\n        isWinnerSquare={isWinnerSquare}\n        isCurrentSquare={isCurrentSquare}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[...Array(3)].map((_, i) => (\n        <div className=\"board-row\" key={i}>\n          {[...Array(3)].map((_, j) => {\n            const index = i * 3 + j;\n            return renderSquare(index);\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  const isDraw = currentMove === 9 && !calculateWinner(currentSquares).winner;\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleOrder() {\n    setAscendingOrder(!ascendingOrder);\n  }\n\n  let moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      const clickedSquare = squares.findIndex(\n        (value, index) => value !== history[move - 1][index]\n      );\n      const row = Math.floor(clickedSquare / 3) + 1;\n      const col = (clickedSquare % 3) + 1;\n      description =\n        move === currentMove\n          ? `You are at move #${currentMove} (row: ${row}, col: ${col})`\n          : `Go to move #${move} (row: ${row}, col: ${col})`;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      <li key={move}>\n        {move === currentMove ? (\n          <span>{description}</span>\n        ) : (\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  if (!ascendingOrder) {\n    moves = moves.reverse();\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          onPlay={handlePlay}\n          isDraw={isDraw}\n          currentMove={currentMove}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>\n          <button onClick={toggleOrder}>\n            {ascendingOrder ? \"Descending Order\" : \"Ascending Order\"}\n          </button>\n        </div>\n        <ol reversed={!ascendingOrder}>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: lines[i] };\n    }\n  }\n  return { winner: null, line: null };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}